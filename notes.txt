Graphql https://graphql.org/
    - Relay
    - Apollo  <--- I have used it, it's simpler

https://www.apollographql.com/

- apollo sever
- apollo client



//-------------

Overview of REST
- GET/POST/PUT/DELETE to endpoints -> controller(function)
- GET query string => string
- POST/PUT/DELETE -> body => text based/binary based/ or others ...
- response 
    - text/based
        - plain text
        - XML
        - JSON
        - HTML 
        - ....
    - binary based
        - image
        - audio
        - video
        - .....

Graphql a controller on a POST endpoint of REST that:
    - input, body text based -> custom Graphql query language
    - response, JSON only
    - you can do graphql query with GET, usually is turn on by default, 
    - but not suggested to use this

Graphql will take over REST API server's job.
    - web server
    - file server
    - streaming server 
        - all not graphql is for


REST API server
GET http://wwww.myserver.com/operation1
GET http://wwww.myserver.com/operation2
GET http://wwww.myserver.com/operation3

Graphql server
is a REST server, that has a graphql handler/controller/function 
that runs on one endpoint, by default /graphql, but you can change to 
whatever you like

You can have a REST server that has only one graphql handler
or you can have REST server that has one or more graphql handlers 
and normal REST handlers.
graphql handler is a POST request handler

POST http://wwww.myserver.com/graphql with body="query {operation1}"
POST http://wwww.myserver.com/graphql with body="query {operation2}"
POST http://wwww.myserver.com/graphql with body="query {operation3}"

GET http://wwww.myserver.com/graphql?query=query{operation3}
    - ok, but not suggested


query language syntax. Like SQL query syntax
schema defination, shape of data. Like defining tables in SQL 
Response -> pure JSON

why Graphql ...



Nodemon https://nodemon.io/
- runs the code with watcher (watchman)
- auto reload codes when your source changed

package "apollo server"
- express (most common node REST server)
- graphql handler
- graphql playground. (graphql Post Man)
    - IDLE for writing graphql query, 
    - edit/run your query
    

Graphql schema definition
    - server side

    - query, idea is read only, 
        - shouldn't change any data
        - but in actual code, you can do anything
        - operations in query can run in any order
    - mutation 
        - CRUD operations, anything that changes data
        - guarenteed to be in order
    - subscription
        - client listen for server events, usually socket connections

Graphql query 
    - client side
    - a query query
    - a mutation query
    - a subscription query
    - not a mixture of any two


primitive type
Graphql scalar type
- default Int/Float/String/Boolean
    - and ID(int or 16/32 char String, this double check)
- you can more. custom scalar type

node or scalar

